<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="efb31c1a-e301-4ce5-9363-ed4b9191ccca" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/core/clock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/country/country.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/date/date.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/timeutil/timeutil.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/criar-servico/criar-servico.component.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/criar-servico/criar-servico.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/criar-servico/criar-servico.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/editar-servico/editar-servico.component.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/editar-servico/editar-servico.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/editar-servico/editar-servico.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../frontend/src/app/models/servico-solicitado.model.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../frontend/src/app/servicos/solicitar-servico/solicitar-servico.component.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../frontend/src/app/servicos/solicitar-servico/solicitar-servico.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../frontend/src/app/servicos/solicitar-servico/solicitar-servico.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/controllers/protected.go" beforeDir="false" afterPath="$PROJECT_DIR$/controllers/protected.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/models/galeria.go" beforeDir="false" afterPath="$PROJECT_DIR$/models/galeria.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/models/servico.go" beforeDir="false" afterPath="$PROJECT_DIR$/models/servico.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/models/servico_solicitado.go" beforeDir="false" afterPath="$PROJECT_DIR$/models/servico_solicitado.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/admin-servicos.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/admin-servicos.component.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/admin-servicos.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/admin-servicos.component.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/admin-servicos.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/admin-servicos.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/servicos.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../../frontend/src/app/admin/admin-servicos/servicos.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../frontend/src/app/app-routing.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../../frontend/src/app/app-routing.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../frontend/src/app/app.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../../frontend/src/app/app.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../frontend/src/app/servicos/servicos.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../../frontend/src/app/servicos/servicos.component.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../frontend/src/app/servicos/servicos.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../../frontend/src/app/servicos/servicos.component.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../frontend/src/app/servicos/servicos.component.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../frontend/src/app/servicos/servicos.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../../frontend/src/app/servicos/servicos.component.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1x52TYwsB57ZeUBQMJw6KLPH6fO" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="ToolWindowStructure.ShowToolbar" value="false" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/models" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="preferences.editor" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/models" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/middlewares" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build main.go">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="extranet" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="extranet" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestJwtWrapper_ValidateToken_WhenTokenIsExpired_ShouldReturnError in extranet/auth" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="extranet" />
      <working_directory value="$PROJECT_DIR$/auth" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="extranet/auth" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestJwtWrapper_ValidateToken_WhenTokenIsExpired_ShouldReturnError\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUser_CheckPassword_WhenHashIsFromAnotherPassword_ShouldReturnError in extranet/models" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="extranet" />
      <working_directory value="$PROJECT_DIR$/models" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="extranet/models" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUser_CheckPassword_WhenHashIsFromAnotherPassword_ShouldReturnError\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUser_CheckPassword_WhenHashIsInvalid_ShouldReturnError in extranet/models" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="extranet" />
      <working_directory value="$PROJECT_DIR$/models" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="extranet/models" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUser_CheckPassword_WhenHashIsInvalid_ShouldReturnError\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUser_HashPassword_W in extranet/models" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="extranet" />
      <working_directory value="$PROJECT_DIR$/models" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="extranet/models" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUser_HashPassword_W\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="extranet" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build main.go" />
        <item itemvalue="Go Test.TestUser_CheckPassword_WhenHashIsFromAnotherPassword_ShouldReturnError in extranet/models" />
        <item itemvalue="Go Test.TestUser_CheckPassword_WhenHashIsInvalid_ShouldReturnError in extranet/models" />
        <item itemvalue="Go Test.TestUser_HashPassword_W in extranet/models" />
        <item itemvalue="Go Test.TestJwtWrapper_ValidateToken_WhenTokenIsExpired_ShouldReturnError in extranet/auth" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/controllers/protected.go</url>
          <line>756</line>
          <option name="timeStamp" value="21" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/controllers/protected.go</url>
          <line>767</line>
          <option name="timeStamp" value="22" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>